AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: GPT Retrieval SAM Template

Parameters:
  OpenAiApiKey:
    Type: String
  ProjectName:
    Type: String
    Default: gpt-retrieval
  FunctionsDirectory:
    Type: String
    Default: ../../functions/aws

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: python3.9

Resources:
  OpenAiApiKeySecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${ProjectName}-openai-api-key
      SecretString: !Ref OpenAiApiKey

  UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${ProjectName}-uploads
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - HEAD
            AllowedOrigins:
              # TODO: restrict to the frontend URL
              - "*"

  GetUploadUrlFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${ProjectName}-get-upload-url
      Handler: index.handler
      CodeUri: !Sub ${FunctionsDirectory}/get_upload_url
      Environment:
        Variables:
          UPLOAD_BUCKET: !Ref UploadBucket
      Policies:
        - S3WritePolicy:
            BucketName: !Ref UploadBucket
      Events:
        GetUploadUrlApi:
          Type: Api
          Properties:
            Path: /uploadUrl/{objectName}
            Method: get
            RestApiId: !Ref ApiGateway

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        swagger: '2.0'
        info:
          title: !Ref ProjectName
        paths:
          /uploadUrl/{objectName}:
            get:
              parameters:
                - name: objectName
                  in: path
                  required: true
                  type: string
              responses: {
                "200": {
                  "description": "Upload URL",
                  "schema": {
                    "type": "object",
                    "properties": {
                      "uploadUrl": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
              x-amazon-apigateway-integration:
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetUploadUrlFunction.Arn}/invocations
                passthroughBehavior: "when_no_templates"
                httpMethod: "POST"
                type: "aws_proxy"
                requestParameters:
                  integration.request.path.objectName: "method.request.path.objectName"